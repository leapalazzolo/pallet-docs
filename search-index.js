var searchIndex = JSON.parse('{\
"pallet_dex":{"doc":"Substrate DEX pallet","t":"ANNNNNNEIEENQNNNNDNNNNNNNNNNQGQNDQNNQNQNNLLLLLLNMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLNLLLLLLLALLNLLLNLLLLLLLLLLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFDLLLLLLLLLLLLLLLL","n":["pallet","AssetANotEnoughAmount","AssetAmountIsZero","AssetBNotEnoughAmount","AssetIdNotFound","AssetMinBalanceIsGreaterThanDesired","AssetsAreEqual","Call","Config","Error","Event","ExactAssetAmountIsZero","Fungibles","InsufficientAssetAAmount","InsufficientAssetBAmount","InsufficientLiquidityMinted","LiquidityAdded","LiquidityPool","LiquidityPoolAmountToBurnCantBeZero","LiquidityPoolCreated","LiquidityPoolDoesNotExist","LiquidityPoolExists","LiquidityPoolInvalidK","LiquidityPoolKOverflow","LiquidityPoolOverflow","LiquidityPoolZeroLiquidity","LiquidityRemoved","MaxAssetInputAmountIsZero","MinimumBalanceForLiquidityPool","Module","NativeBalance","NotEnoughReserveToSwap","Pallet","PalletId","RemoveLiquidityAssetANotEnough","RemoveLiquidityAssetBNotEnough","RuntimeEvent","Swap","SwapFee","SwapMaximumInputNotEnough","SwapMinimumInputNotEnough","__clone_box","__clone_box","__clone_box","account_id","add_liquidity","add_liquidity","add_liquidity","asset_a_id","asset_a_reserve","asset_b_id","asset_b_reserve","asset_balance","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","create_liquidity_pool","create_liquidity_pool","current_storage_version","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","dispatch_bypass_filter","dispatchables","do_add_liquidity","do_create_liquidity_pool","do_remove_liquidity","do_swap_exact_in_for_out","do_swap_in_for_exact_out","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_amount_in_using_amount_out_with_fee","get_amount_out_using_amount_in_with_fee","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","identity","index","infos","integrity_test","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","liquidity_pool_asset_id","lp_id","max_encoded_len","mint_asset","module_name","name","new_call_variant_add_liquidity","new_call_variant_create_liquidity_pool","new_call_variant_remove_liquidity","new_call_variant_swap_exact_in_for_out","new_call_variant_swap_in_for_exact_out","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","quote","remove_liquidity","remove_liquidity","remove_liquidity","setup_account","setup_account","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","swap_exact_in_for_out","swap_exact_in_for_out","swap_exact_in_for_out","swap_fee","swap_in_for_exact_out","swap_in_for_exact_out","swap_in_for_exact_out","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","amount_a_min_receive","amount_b_min_receive","asset_a_balance","asset_a_balance_desired","asset_a_balance_min","asset_a_id","asset_a_id","asset_a_id","asset_b_balance","asset_b_balance_desired","asset_b_balance_min","asset_b_id","asset_b_id","asset_b_id","asset_in","asset_in","asset_out","asset_out","exact_in","exact_out","liquidity_pool_amount_to_burn","max_in","min_out","asset_a_balance","asset_a_balance","asset_a_id","asset_a_id","asset_a_id","asset_b_balance","asset_b_balance","asset_b_id","asset_b_id","asset_b_id","asset_in_balance","asset_out_balance","liquidity_pool_asset_balance","liquidity_pool_asset_balance","liquidity_pool_asset_id","liquidity_pool_asset_id","liquidity_pool_asset_id","liquidity_pool_asset_id","who","who","who","add_liquidity","create_liquidity_pool","remove_liquidity","swap_exact_in_for_out","swap_in_for_exact_out","LiquidityPools","borrow","borrow_mut","from","from_mut","from_mut","from_ref","from_ref","into","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_dex"],[1,"pallet_dex::pallet"],[280,"pallet_dex::pallet::Call"],[303,"pallet_dex::pallet::Event"],[324,"pallet_dex::pallet::dispatchables"],[329,"pallet_dex::pallet::storage_types"]],"d":["The <code>pallet</code> module in each FRAME pallet hosts the most …","Asset A amount is not enough to create a new account when …","An amount cannot be zero if the operation creates a …","Asset B amount is not enough to create a new account when …","Asset id was not found","Minimum value in swap is greater than expected","Equal assets can’t create a new liquidity pool","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Exact amounts in swaps cannot be zero","Asset balance type","Not enough asset A when adding new liquidity on the pool","Not enough asset B when adding new liquidity on the pool","The liquidity pool asset amount to be minted is not enough …","New liquidity was added on the liquidity pool","Each liquidity pool will store this data type to track the …","The liquidity pool asset amount to be burned cannot be zero","The liquidity pool was created succesfully","Liquidity pool does not exist","The combination of assets exist in a different liquidity …","New reservers after doing a swap does not maintain the …","Cannot calculate initial K for a new liquidity pool","Math overflow doing a calculation related to the liquidity","The operation cannot be done due to there’s no liquidity …","Some existing liquidity was removed on the liquidity pool","Maximum in in swap with exact out cannot be zero","Minimum balance required for the new liquidity pool token. …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Native currency balance type","Calculated amount out is not available in the total reserve","The <code>Pallet</code> struct, the main type that implements traits …","Identification of the pallet that will be used for …","The amount of asset a that the user will receive when …","The amount of asset b that the user will receive when …","Runtime’s definition of an event.","Two assets from a liquidity pool were swapped succesfully","This fee is taken in each swap and its used as an …","Maximum value from amount in in swap with exact_out is not …","Minimum value from amount out in swap with exact_in is not …","","","","","","Add new liquidity to an existing pool (asset_a and asset_b)","See <code>Pallet::add_liquidity</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a liquidity pool and also a new asset for it that …","See <code>Pallet::create_liquidity_pool</code>.","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Create a call with the variant <code>add_liquidity</code>.","Create a call with the variant <code>create_liquidity_pool</code>.","Create a call with the variant <code>remove_liquidity</code>.","Create a call with the variant <code>swap_exact_in_for_out</code>.","Create a call with the variant <code>swap_in_for_exact_out</code>.","","","","","","","","","It removes from an existing liquidity pool both assets “a…","","See <code>Pallet::remove_liquidity</code>.","","","","","","","","Auto-generated docs-only module listing all (public and …","","It swaps the exact asset amount (exact_in) to a calculated …","See <code>Pallet::swap_exact_in_for_out</code>.","","It swaps the exact asset amount (exact_out) to a …","","See <code>Pallet::swap_in_for_exact_out</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The asset amount added in the addition of liquidity","The asset amount removed in the addition of liquidity","Asset a id of the new liquidity pool","The first asset id that was involved in the addition of …","The first asset id that was involved in the remove of …","The asset amount added in the addition of liquidity","The asset amount removed in the addition of liquidity","Asset b id of the new liquidity pool","The second asset id that was involved in the addition of …","The second asset id that was involved in the remove of …","The amount of assets added on the liquidity pool","The amount of assets removed on the liquidity pool","The amount minted of liquidity pool asset","The amount burned of liquidity pool asset","Asset id of the new asset created for the liquidity pool","The id of liquidity pool invoolved on the swap operation","The liquidity id that was involved in the addition of …","The liquidity id that was involved in the remove of …","The account id that performed the swap operation","The account id that performed the addition of liquidity","The account id that performed the removal of liquidity","Add new liquidity to an existing pool (asset_a and asset_b)","Creates a liquidity pool and also a new asset for it that …","It removes from an existing liquidity pool both assets “a…","It swaps the exact asset amount (exact_in) to a calculated …","It swaps the exact asset amount (exact_out) to a …","Stores all the informacion of each liquidity pool. Once a …","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,17,17,17,17,17,17,0,0,0,0,17,3,17,17,17,10,0,17,10,17,17,17,17,17,17,10,17,3,0,3,17,0,3,17,17,3,10,3,17,17,9,10,11,9,9,9,11,19,19,19,19,9,10,17,11,19,10,17,11,19,10,17,11,19,9,10,17,11,19,9,10,17,11,19,9,10,11,9,10,11,9,9,9,11,9,10,17,11,19,10,17,11,19,10,17,11,19,10,17,11,19,19,11,0,9,9,9,9,9,10,17,11,19,9,10,11,9,9,9,10,10,10,11,11,11,9,10,17,11,19,9,10,17,11,19,9,9,10,10,17,17,11,11,19,19,9,9,10,10,17,17,11,11,19,19,9,9,11,11,11,11,11,10,17,11,19,9,9,9,9,10,17,11,19,9,10,17,11,19,9,10,17,11,19,19,9,19,9,9,9,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,11,9,9,10,17,11,19,9,0,9,9,11,9,9,9,11,10,17,11,19,9,10,11,9,10,17,11,19,9,10,17,11,19,0,0,0,10,17,11,19,10,17,11,19,10,17,11,19,9,10,17,11,19,10,17,11,19,9,10,17,11,19,9,10,17,11,19,9,10,17,11,19,9,17,44,44,45,46,46,45,46,44,45,46,46,45,46,44,47,48,47,48,47,48,44,48,47,49,50,51,49,50,49,50,51,49,50,52,52,49,50,51,52,49,50,52,49,50,0,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[],2],[[[4,[3]]],2],0,0,0,0,0,[[]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[[[10,[3]]],[[10,[3]]]],[[[11,[3]]],[[11,[3]]]],[[]],[[]],[[]],[[],12],[[],13],[[[4,[3]]],2],0,[[]],[14,[[16,[[10,[3]],15]]]],[14,[[16,[17,15]]]],[14,[[16,[[11,[3]],15]]]],[14,[[16,[[19,[18,18]],15]]]],[[[20,[5]]],[[16,[15]]]],[[[20,[5]]],[[16,[15]]]],[[[20,[5]]],[[16,[15]]]],[[[20,[5]]],[[16,[15]]]],[[21,[20,[5]]],[[16,[15]]]],[[21,[20,[5]]],[[16,[15]]]],[[21,[20,[5]]],[[16,[15]]]],[[21,[20,[5]]],[[16,[15]]]],[[21,14],[[16,[15]]]],[[21,14],[[16,[15]]]],[[21,14],[[16,[15]]]],[[21,14],[[16,[15]]]],[[],[[19,[22,22]]]],[[[11,[3]]],23],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[[10,[3]],[0,[24,25]]]],[[17,[0,[24,25]]]],[[[11,[3]],[0,[24,25]]]],[[[19,[26,26]],[0,[24,25]]]],[[9,9],27],[[[10,[3]],[10,[3]]],27],[[[11,[3]],[11,[3]]],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[9,28],29],[[[10,[3]],28],29],[[[17,[3]],28],29],[[[11,[3]],28],29],[[[19,[30,30]],28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[16,[[17,[3]]]]]],[[],[[16,[[17,[3]]]]]],[[[11,[3]]],5],[[],[[20,[5]]]],[[[11,[3]]],31],[[],[[20,[31]]]],[[[11,[3]]],32],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],12],[[],[[8,[33]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[],12],[[],2],[[],31],[[],31],[[],[[11,[3]]]],[[],[[11,[3]]]],[[],[[11,[3]]]],[[],[[11,[3]]]],[[],[[11,[3]]]],[[[34,[3]]]],[[],35],[[[34,[3]]]],[[]],[[[34,[3]],36],36],[[[34,[3]]],36],[[],36],[[],[[16,[[17,[3]]]]]],[[[4,[3]]],2],[[],2],0,[[],2],[8,2],[[[10,[3]]],12],[17,12],[[[11,[3]]],12],[[[19,[26,26]]],12],[[],[[8,[37]]]],0,[[],2],[[[4,[3]]],2],0,[[],38],[[[4,[3]]],2],[[],2],0,[[[20,[5]]],[[8,[5,7]]]],[[[20,[5]]],[[8,[5,7]]]],[[[20,[5]]],[[8,[5,7]]]],[[[20,[5]]],[[8,[5,7]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],[[8,[5,7]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[41]]]],[36,[[43,[42]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],39],[[]],[[]],[[]]],"c":[29],"p":[[3,"Private"],[6,"DispatchResult"],[8,"Config"],[6,"OriginFor"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Pallet"],[4,"Event"],[4,"Call"],[15,"usize"],[3,"CrateVersion"],[8,"Input"],[3,"Error"],[4,"Result"],[4,"Error"],[8,"Decode"],[3,"LiquidityPool"],[15,"slice"],[15,"u32"],[8,"Default"],[6,"DispatchResultWithPostInfo"],[8,"Output"],[8,"Sized"],[8,"Encode"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"str"],[3,"DispatchInfo"],[3,"PalletInfoData"],[6,"BlockNumberFor"],[3,"StorageVersion"],[3,"Weight"],[3,"StorageInfo"],[15,"u16"],[3,"TypeId"],[3,"Type"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[13,"remove_liquidity"],[13,"create_liquidity_pool"],[13,"add_liquidity"],[13,"swap_exact_in_for_out"],[13,"swap_in_for_exact_out"],[13,"LiquidityAdded"],[13,"LiquidityRemoved"],[13,"LiquidityPoolCreated"],[13,"Swap"],[3,"LiquidityPools"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
